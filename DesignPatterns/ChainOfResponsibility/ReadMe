Chain Of Responsibilty pattern:-
1) Chain of responsibility pattern(behavioral) is used to achieve loose coupling in software design where a request from 
   client is passed to a chain of objects to process them. Later, the object in the chain will decide themselves 
   who will be processing the request and whether the request is required to be sent to the next object in the chain or not.

When To use:-
1) When you want to decouple a request’s sender and receiver
2) Multiple objects, determined at runtime, are candidates to handle a request
3) When you don’t want to specify handlers explicitly in your code
4) When you want to issue a request to one of several objects without specifying the receiver explicitly.

Traits:-
1) Sender is aware of only one receiver.
2) Each receiver is only aware of next receiver.
3) The sender does not know ho recieved the message.
4) The first receiver in chain to handle the message is responsible to terminates the chain.
5) Order of receiver list matters.

The fact that you can break the chain at any point differentiates the Chain of Responsibility pattern 
 from the Decorator pattern.